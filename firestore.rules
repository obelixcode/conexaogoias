rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Regras específicas para produção
    // Regras para usuários administradores
    match /users/{userId} {
      // Usuário pode ler e escrever seu próprio documento
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
      
      // Admins podem ler qualquer usuário
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
      
      // Admins podem escrever qualquer usuário
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para listagem de usuários (coleção inteira)
    match /users/{document=**} {
      // Admins podem listar todos os usuários
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para notícias
    match /news/{newsId} {
      // Qualquer um pode ler notícias publicadas
      allow read: if resource.data.isPublished == true;
      
      // Apenas usuários autenticados com role admin/super_admin podem escrever
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para categorias
    match /categories/{categoryId} {
      // Qualquer um pode ler categorias (temporário para build)
      allow read: if true;
      
      // Apenas usuários autenticados com role admin/super_admin podem escrever
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para tags
    match /tags/{tagId} {
      // Qualquer um pode ler tags
      allow read: if true;
      
      // Apenas usuários autenticados com role admin/super_admin podem escrever
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para biblioteca de mídia
    match /media/{mediaId} {
      // Qualquer um pode ler mídia
      allow read: if true;
      
      // Apenas usuários autenticados com role admin/super_admin podem escrever
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para páginas estáticas
    match /pages/{pageId} {
      // Qualquer um pode ler páginas publicadas
      allow read: if resource.data.status == 'published';
      
      // Apenas usuários autenticados com role admin/super_admin podem escrever
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para banners
    match /banners/{bannerId} {
      // Qualquer um pode ler banners (temporário para build)
      allow read: if true;
      
      // Apenas usuários autenticados com role admin/super_admin podem escrever
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para cliques de banners
    match /bannerClicks/{clickId} {
      // Apenas admins podem ler cliques de banners
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
      
      // Qualquer um pode criar cliques (para tracking)
      allow create: if true;
      
      // Apenas admins podem atualizar/deletar
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para visualizações
    match /news_views/{newsId} {
      // Qualquer um pode ler e escrever visualizações
      allow read, write: if true;
    }
    
    // Regras para estatísticas
    match /stats/{statId} {
      // Apenas admins podem ler estatísticas
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
      
      // Apenas admins podem escrever estatísticas
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para configurações do site
    match /settings/{settingId} {
      // Qualquer um pode ler configurações (para o site público)
      allow read: if true;
      
      // Apenas admins podem escrever configurações
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para newsletter
    match /newsletter_subscriptions/{subscriptionId} {
      // Qualquer um pode criar inscrições
      allow create: if true;
      
      // Apenas admins podem ler e gerenciar inscrições
      allow read, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para logs de auditoria
    match /audit_logs/{logId} {
      // Apenas admins podem ler logs de auditoria
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
      
      // Apenas o sistema pode escrever logs (via Cloud Functions)
      allow write: if false;
    }
    
    // Regras para roadmap
    match /roadmap_requests/{requestId} {
      // Apenas admins podem ler e escrever solicitações do roadmap
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Regras para timeline de status do roadmap
    match /roadmap_status_timeline/{timelineId} {
      // Apenas admins podem ler timeline
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
      
      // Apenas admins podem criar entradas na timeline
      allow create: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
      
      // Não permitir atualização ou exclusão da timeline (auditoria)
      allow update, delete: if false;
    }
    
    // Regras para configuração de notícias em destaque
    match /featured_news_config/{docId} {
      // Qualquer um pode ler (para exibir na homepage)
      allow read: if true;
      
      // Apenas admins podem escrever
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'super_admin'];
    }
    
    // Negar acesso a qualquer outra coleção
    match /{document=**} {
      allow read, write: if false;
    }
    // Regras para news_views (visualizações)
    match /news_views/{viewId} {
      allow read: if true; // Visualizações são públicas
      allow write: if false; // Apenas via server-side (se houver)
    }
  }
}
