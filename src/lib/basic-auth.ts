// Sistema de autentica√ß√£o b√°sico e confi√°vel
import { cookies } from 'next/headers';

import { UserRole } from '@/types/user';

export interface BasicUser {
  uid: string;
  email: string;
  name: string;
  role: UserRole;
  isActive: boolean;
}

// Sistema de autentica√ß√£o seguro usando apenas Firebase Auth

export async function getBasicAuthUser(): Promise<BasicUser | null> {
  try {
    const cookieStore = await cookies();
    const session = cookieStore.get('__session')?.value;
    
    if (!session) {
      console.log('üîç Nenhuma sess√£o encontrada');
      return null;
    }
    
    // Verificar se √© um JWT token do Firebase (cont√©m pontos)
    if (session.includes('.')) {
      console.log('üîç Cookie cont√©m JWT do Firebase - ignorando');
      return null;
    }
    
    // Sistema de autentica√ß√£o b√°sico removido por seguran√ßa
    // Apenas sess√µes base64 v√°lidas s√£o aceitas
    
    // Tentar decodificar como base64
    try {
      const decoded = Buffer.from(session, 'base64').toString('utf-8');
      const userData = JSON.parse(decoded);
      
      // Verificar se a sess√£o n√£o expirou
      if (userData.expiresAt && Date.now() > userData.expiresAt) {
        console.log('üîç Sess√£o expirada');
        return null;
      }
      
      console.log('‚úÖ Sess√£o v√°lida para:', userData.email);
      return userData;
    } catch (error) {
      console.log('üîç Sess√£o inv√°lida - ignorando');
      return null;
    }
  } catch (error) {
    console.error('‚ùå Erro ao verificar usu√°rio:', error);
    return null;
  }
}

export function createBasicSession(userData: BasicUser): string {
  const sessionData = {
    ...userData,
    expiresAt: Date.now() + (24 * 60 * 60 * 1000), // 24 horas
    createdAt: Date.now()
  };
  
  return Buffer.from(JSON.stringify(sessionData)).toString('base64');
}

export function requireBasicAuth() {
  return async (): Promise<BasicUser> => {
    const user = await getBasicAuthUser();
    if (!user) {
      throw new Error('Unauthorized');
    }
    return user;
  };
}

// Fun√ß√£o de autentica√ß√£o b√°sica removida por seguran√ßa
// Toda autentica√ß√£o deve passar pelo Firebase Auth
